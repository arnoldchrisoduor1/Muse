# Generated by Django 4.2.9 on 2025-03-16 10:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('path', models.CharField(db_index=True, max_length=500)),
                ('depth', models.IntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='poetry.comment')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Poem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('content', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('thoughts', models.TextField(blank=True, help_text="Author's thoughts on the poem")),
                ('image_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poems', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.CharField(max_length=20)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='poetry.comment')),
                ('poem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='poetry.poem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='poem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='poetry.poem'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='poem',
            index=models.Index(fields=['user'], name='poetry_poem_user_id_ea0ad2_idx'),
        ),
        migrations.AddIndex(
            model_name='poem',
            index=models.Index(fields=['slug'], name='poetry_poem_slug_2b49f1_idx'),
        ),
        migrations.AddIndex(
            model_name='poem',
            index=models.Index(fields=['created_at'], name='poetry_poem_created_71ae84_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['content_type'], name='poetry_like_content_870d92_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user'], name='poetry_like_user_id_6db278_idx'),
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(condition=models.Q(('poem__isnull', False)), fields=('user', 'content_type', 'poem'), name='unique_poem_like'),
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(condition=models.Q(('comment__isnull', False)), fields=('user', 'content_type', 'comment'), name='unique_comment_like'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['poem'], name='poetry_comm_poem_id_cb9b53_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent'], name='poetry_comm_parent__2e4f11_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['path'], name='poetry_comm_path_b993b3_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user'], name='poetry_comm_user_id_5a85b4_idx'),
        ),
    ]
